---
author: "Ian Bach"
date: ""
output: 
  word_document: default
  pdf_document: default
  html_document: default
---

```{r setup, include=TRUE}
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/ibach/Ian Bach Dropbox/Ian Bach")
jump_data <- read.csv("JumpData.csv")
head(data)

library(tidyverse)
library(dplyr)
library(ggplot2)
library(lubridate)
library(gt)
```

## Areas Covered

1). Overall Player Participation: Display the number of tests each player has participated in.

2). Top Performers: Identify players with the highest jump heights or other metrics of interest.

3). Positional Analysis & Performance Over Time: Analyze if there are differences in jump performance based on field positions & plot the jump height for each position over time to see the progression.

4). Trends & Correlations: If there are multiple dates, we can look into the progression of players over time.

5). Concentric Force Analysis: Display the average concentric force for each player and position.

6). Eccentric Force Analysis: Display the average concentric force for each player.

  - Descriptive Statistics: Obtain basic statistics for the eccentric columns.
  
  - Trends Over Time: Examine how the average eccentric values change over time.
  
  - Position-Based Analysis: Examine if there are differences in eccentric measures across different field positions.
  
  - Asymmetry Analysis: Explore the 'Eccentric.Braking.Impulse..Asym.' column to understand if there's a significant asymmetry in players over time.




### Overall Player Participation (Number of Tests Per Player)

Player ID 121 participated in 30 tests.


Player ID 116 participated in 24 tests.


Player IDs 120 and 115 each participated in 16 tests.


Player IDs 101 and 105 each participated in 15 tests.


316 unique tests based on the combination of Player ID and Date.


```{r}
player_participation <- jump_data %>%
  group_by(PlayerId) %>%
  tally(name = 'Number of Tests') %>%
  arrange(desc(`Number of Tests`))

# Calculate half length without using nrow
half_length <- floor(length(player_participation$PlayerId) / 2)

# Visualize data for the first half of players
ggplot(player_participation[1:half_length, ], aes(x = PlayerId, y = `Number of Tests`)) +
  geom_bar(stat = 'identity') +
  labs(title = 'Number of Tests per Player', x = 'Player ID', y = 'Number of Tests') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  scale_x_continuous(breaks = player_participation$PlayerId[1:half_length])

# Visualize data for the second half of players
ggplot(player_participation[(half_length+1):length(player_participation$PlayerId), ], aes(x = PlayerId, y = `Number of Tests`)) +
  geom_bar(stat = 'identity') +
  labs(title = 'Number of Tests per Player', x = 'Player ID', y = 'Number of Tests') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  scale_x_continuous(breaks = player_participation$PlayerId[(half_length+1):length(player_participation$PlayerId)])
```


```{r}
average_jump_height <- jump_data %>%
  group_by(PlayerId) %>%
  summarise(`Average Jump Height (inches)` = mean(`Jump.Height..Imp.Mom..in.Inches`, na.rm = TRUE)) %>%
  arrange(desc(`Average Jump Height (inches)`))

half_length <- floor(nrow(average_jump_height) / 2)

# Visualize data for the first half of players

ggplot(average_jump_height[1:half_length, ], aes(x = PlayerId, y = `Average Jump Height (inches)`)) +
  geom_bar(stat = 'identity') +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = 'Average Jump Height by Player', x = 'Player ID', y = 'Average Jump Height (inches)') +
  scale_x_continuous(breaks = average_jump_height$PlayerId[1:half_length])

half_length <- floor(nrow(average_jump_height) / 2)

# Visualize data for the second half of players

ggplot(average_jump_height[(half_length+1):nrow(average_jump_height), ], aes(x = PlayerId, y = `Average Jump Height (inches)`)) +
  geom_bar(stat = 'identity') +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = 'Average Jump Height by Player', x = 'Player ID', y = 'Average Jump Height (inches)') +
  scale_x_continuous(breaks = average_jump_height$PlayerId[(half_length+1):nrow(average_jump_height)])
```


#### Summary Stats

Jump Height (Impulse Moment in Inches):
Mean: 16.83 inches
Median (50% percentile): 16.60 inches
Minimum: 11.10 inches
Maximum: 35.81 inches

Flight Time (s):
Mean: 0.61 seconds
Median (50% percentile): 0.61 seconds
Minimum: 0.49 seconds
Maximum: 0.75 seconds

Countermovement Depth (cm):
Mean: -40.12 cm
Median (50% percentile): -39.36 cm
Minimum: -66.51 cm
Maximum: -2.66 cm

Concentric Mean Force (N):
Mean: 1936.64 N
Median (50% percentile): 1934.97 N
Minimum: 1430.16 N
Maximum: 2571.33 N


```{r }
# Basic Statistics for Key Metrics
basic_stats <- jump_data %>% select('Jump.Height..Imp.Mom..in.Inches', 'Flight.Time..s.', 'Countermovement.Depth..cm.', 'Concentric.Mean.Force..N.')
basic_stats <- sapply(basic_stats, summary)

print(basic_stats)

```

### Top 5 Performers 

Overall AVG Jump Height Player IDs
- 142
- 122
- 117
- 112

```{r Top Performers}

# Top 5 performers based on jump height
top_performers <- jump_data %>%
  group_by(PlayerId) %>%
  summarise(Avg_Jump_Height = mean(Jump.Height..Imp.Mom..in.Inches), .groups = 'drop')

top_5_performers <- top_performers %>%
  arrange(desc(Avg_Jump_Height)) %>%
  head(5)

# Plotting the top 5 performers
plot <- ggplot(top_5_performers, aes(x=reorder(PlayerId, Avg_Jump_Height), y=Avg_Jump_Height)) +
  geom_bar(stat='identity', fill='steelblue') +
  coord_flip() +
  labs(title='Top 5 Performers Based on Average Jump Height', x='Player ID', y='Average Jump Height (in Inches)') +
  theme_minimal()

print(plot)
```


```{r top 5}
get_top_performers_jump <- function(stat) {
  jump_data %>%
    arrange(desc(!!sym(stat))) %>%
    select(PlayerId, 'Field.Position', !!sym(stat)) %>%
    head(5)
}

# Get top 5 performers for 'Jump.Height..Imp.Mom..in.Inches'
jump_height_top_5 <- get_top_performers_jump('Jump.Height..Imp.Mom..in.Inches')
jump_height_top_5

# Get top 5 performers for 'Jump.Height..Imp.Mom..in.Inches'
flight_height_top_5 <- get_top_performers_jump('Flight.Time..s.')
flight_height_top_5

# Get top 5 performers for 'Jump.Height..Imp.Mom..in.Inches'
Counter_height_top_5 <- get_top_performers_jump('Countermovement.Depth..cm.')
Counter_height_top_5

# Get top 5 performers for 'Jump.Height..Imp.Mom..in.Inches'
Concentric_height_top_5 <- get_top_performers_jump('Concentric.Mean.Force..N.')
Concentric_height_top_5

# Create a gt table for jump_height_top_5
jump_height_table <- gt(jump_height_top_5)

# Create a gt table for flight_height_top_5
flight_height_table <- gt(flight_height_top_5)

# Create a gt table for Counter_height_top_5
Counter_height_table <- gt(Counter_height_top_5)

# Create a gt table for Concentric_height_top_5
Concentric_height_table <- gt(Concentric_height_top_5)

jump_height_table 
flight_height_table
Counter_height_table 
Concentric_height_table

```



## Position Analysis

Outfielders:
Average Jump Height: 18.56 inches
Average Flight Time: 0.63 seconds
Average Countermovement Depth: -38.19 cm
Average Concentric Mean Force: 2102.32 N

Pitchers:
Average Jump Height: 16.86 inches
Average Flight Time: 0.61 seconds
Average Countermovement Depth: -40.98 cm
Average Concentric Mean Force: 1884.56 N

Infielders:
Average Jump Height: 16.73 inches
Average Flight Time: 0.62 seconds
Average Countermovement Depth: -39.41 cm
Average Concentric Mean Force: 1944.04 N

Catchers:
Average Jump Height: 13.80 inches
Average Flight Time: 0.56 seconds
Average Countermovement Depth: -40.32 cm
Average Concentric Mean Force: 2003.05 N

```{r position}
position_performance <- jump_data %>%
  group_by(Field.Position) %>%
  summarise(
    Jump.Height..Imp.Mom..in.Inches = mean(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE),
    Flight.Time..s. = mean(Flight.Time..s., na.rm = TRUE),
    Countermovement.Depth..cm. = mean(Countermovement.Depth..cm., na.rm = TRUE),
    Concentric.Mean.Force..N. = mean(Concentric.Mean.Force..N., na.rm = TRUE)
  ) %>%
  arrange(desc(Jump.Height..Imp.Mom..in.Inches))

print(position_performance)
```


## Performance Overtime (Jump Height)

Outfielders generally have higher jump heights, with the median being the highest among all positions. They also have a wider range of performances.

Catchers have the lowest median jump height, and their jump performance range is narrower compared to other positions.

There are some potential outliers in the Infielders and Pitchers

```{r Performance Over Time}
# Filter out blanks in Field.Position
jump_data2 <- jump_data %>% filter(Field.Position != '')

# Group data by Field.Position and Date, then compute the average jump height
position_data <- jump_data2 %>%
  group_by(Field.Position, Date) %>%
  summarise(Avg_Jump_Height = mean(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE))

# Box plot for each position's jump height
ggplot(position_data, aes(x = Field.Position, y = Avg_Jump_Height)) +
  geom_boxplot(aes(fill = Field.Position)) +
  labs(title = 'Box Plot Comparison of Jump Heights by Field Position',
       x = 'Field Position',
       y = 'Jump Height (in inches)') +
  theme_minimal() +
  theme(legend.position = 'none')
```

### Correlations

Jump Height vs. Flight Time:
There's a very strong positive correlation (close to 1) between jump height and flight time. This is expected, as higher jumps would naturally lead to longer flight times.

Jump Height vs. Countermovement Depth:
There's a negative correlation between jump height and countermovement depth. This might suggest that deeper countermovements don't necessarily lead to higher jumps.

Jump Height vs. Concentric Mean Force:
There's a moderate positive correlation between jump height and concentric mean force, suggesting that jumps with more force tend to be higher, but other factors might also influence the jump height.

Flight Time vs. Concentric Mean Force:
Similar to jump height, there's a moderate positive correlation between flight time and concentric mean force.


```{r Correlations}
# Metrics pairs
dimensions <- list(
  c('Jump.Height..Imp.Mom..in.Inches', 'Flight.Time..s.'),
  c('Jump.Height..Imp.Mom..in.Inches', 'Countermovement.Depth..cm.'),
  c('Jump.Height..Imp.Mom..in.Inches', 'Concentric.Mean.Force..N.'),
  c('Flight.Time..s.', 'Concentric.Mean.Force..N.')
)

# Plotting the scatter plots individually
lapply(dimensions, function(d) {
  plot <- ggplot(jump_data, aes_string(x=d[1], y=d[2], color='Field.Position')) +
    geom_point() +
    labs(title=paste(d[1], 'vs.', d[2])) +
    theme(legend.position='top')
  print(plot)
})
```

## Concentric Analysis

```{r}
# Descriptive Analysis
# Group by Field.Position and compute descriptive statistics for Jump.Height..Imp.Mom..in.Inches
descriptive_stats <- jump_data %>%
  group_by(Field.Position) %>%
  summarise(
    count = n(),
    mean = mean(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE),
    std_dev = sd(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE),
    min = min(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE),
    q25 = quantile(Jump.Height..Imp.Mom..in.Inches, 0.25, na.rm = TRUE),
    median = median(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE),
    q75 = quantile(Jump.Height..Imp.Mom..in.Inches, 0.75, na.rm = TRUE),
    max = max(Jump.Height..Imp.Mom..in.Inches, na.rm = TRUE)
  )

gt(descriptive_stats)
```

Here are the top 5 players based on their mean Concentric.Mean.Force..N.:

Player 119: Mean force of approximately  2427.29 N

Player 122: Mean force of approximately 2311.24 N

Player 103: Mean force of approximately 2280.81 N

Player 139: Mean force of approximately 2260.11 N

Player 114: Mean force of approximately 2137.74 N


```{r average concentric force for each player}
# Calculate average concentric force for each player
avg_concentric_force <- jump_data %>%
  group_by(PlayerId) %>%
  summarise(`Concentric.Mean.Force..N.` = mean(`Concentric.Mean.Force..N.`))

# Sort the data for better visualization
avg_concentric_force_sorted <- avg_concentric_force %>%
  arrange(desc(`Concentric.Mean.Force..N.`))

# Plotting the data
p <- ggplot(avg_concentric_force_sorted, aes(x = PlayerId, y = `Concentric.Mean.Force..N.`)) +
  geom_bar(stat = 'identity', fill = scales::viridis_pal()(nrow(avg_concentric_force_sorted))) +
  labs(title = 'Average Concentric Force for Each Player', x = 'Player ID', y = 'Average Concentric Force (N)') +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  scale_x_continuous(breaks = avg_concentric_force_sorted$PlayerId)

# Display the plot
print(p)

```



```{r average concentric force for each player within each field position}
# Calculate average concentric force for each player within each field position
avg_concentric_force_position <- jump_data %>%
  group_by(PlayerId, `Field.Position`) %>%
  summarise(`Concentric.Mean.Force..N.` = mean(`Concentric.Mean.Force..N.`))

# Sort the data for better visualization
avg_concentric_force_position_sorted <- avg_concentric_force_position %>%
  arrange(desc(`Concentric.Mean.Force..N.`))

# Plotting the data
p <- ggplot(avg_concentric_force_position_sorted, aes(x = PlayerId, y = `Concentric.Mean.Force..N.`, fill = `Field.Position`)) +
  geom_bar(stat = 'identity', position = 'dodge') +
  scale_fill_viridis_d() +
  labs(title = 'Average Concentric Force for Each Player Grouped by Field Position', x = 'Player ID', y = 'Average Concentric Force (N)') +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  scale_x_continuous(breaks = avg_concentric_force_position_sorted$PlayerId)

# Display the plot
print(p)

```


### Eccentric Analysis

```{r Descriptive Statistics}
eccentric_columns <- grep('Eccentric', names(jump_data), value=TRUE)

# Obtain basic statistics for the eccentric columns
eccentric_stats <- jump_data[, eccentric_columns]
summary(eccentric_stats)

```


The Average ECC braking impluse is by infielders. This could be the case due to:

- Highest accumulation of Jumping per position


- Actions within movement that requires more eccentric movement


- Jumping needs to be achieved at highest peak


```{r Position-Based Analysis}
average_eccentric_by_position <- aggregate(Eccentric.Braking.Impulse ~ Field.Position, jump_data, mean)

# Order the data by Eccentric.Braking.Impulse
average_eccentric_by_position <- average_eccentric_by_position[order(average_eccentric_by_position$Eccentric.Braking.Impulse), ]

# Plotting the average eccentric braking impulse by field position
ggplot(average_eccentric_by_position, aes(x=reorder(Field.Position, Eccentric.Braking.Impulse), y=Eccentric.Braking.Impulse)) +
  geom_bar(stat='identity', fill='skyblue') +
  coord_flip() +
  labs(title='Average Eccentric Braking Impulse by Field Position', x='Field Position', y='Eccentric Braking Impulse (Ns)') +
  theme_minimal() +
  theme(panel.grid.major.x = element_line(colour = 'grey80'))
```

#### Concentric Analysis

```{r}
additional_metrics <- jump_data %>%
  group_by(PlayerId, Field.Position) %>%
  summarise(
    `Average Eccentric Braking Asymmetry (%)` = mean(`Eccentric.Braking.Impulse..Asym.`),
    `Average Concentric Impulse Asymmetry (Ns)` = mean(`Concentric.Impulse..Asym...Ns.`),
    `Average Concentric Force (N)` = mean(`Concentric.Mean.Force..N.`),
    `Average Eccentric Braking Impulse (Ns)` = mean(`Eccentric.Braking.Impulse`)
  ) %>%
  arrange(desc(`Average Concentric Force (N)`))

```

##### Average Concentric Force (N) per Player:

The average concentric force, which measures the average upward force exerted during the jump, varies across players.


Some players consistently produce higher forces, indicating stronger concentric (upward) phases during their jumps. This could be indicative of their overall lower body strength or jumping technique.


It's important to note that while higher force can indicate better performance, it's essential to consider other factors like jump height and the player's weight.


```{r Average Concentric Force (N) per Player}
quarter_length <- length(unique(additional_metrics$PlayerId)) / 4
additional_metrics$facet_group <- cut(as.numeric(as.factor(additional_metrics$PlayerId)),
                                      breaks = c(0, quarter_length, 2*quarter_length, 3*quarter_length, Inf),
                                      labels = c('Group 1', 'Group 2', 'Group 3', 'Group 4'))

p6 <- ggplot(additional_metrics, aes(x = PlayerId, y = `Average Concentric Force (N)`)) +
  geom_bar(stat = 'identity', fill = 'orange') +
  labs(title = 'Average Concentric Force (N) per Player', y = 'Force (N)', x = 'Player ID') +
  scale_x_continuous(breaks = additional_metrics$PlayerId) + 
  facet_wrap(~ facet_group, scales = 'free_x') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) 

print(p6)

```
####  Average Eccentric Braking Impulse (Ns) per Player:

The eccentric braking impulse is a measure of the force exerted to slow down or stop a movement. In the context of a jump, it represents the force applied to decelerate the body before transitioning to the upward phase of the jump.


Players exhibit varying levels of eccentric braking impulse. A higher value might indicate a more pronounced deceleration phase, which could be a sign of controlled and powerful jumps. However, excessive braking might also indicate hesitation or inefficient movement patterns.


Players with significantly lower eccentric braking impulses might not be using the stretch-shortening cycle effectively, possibly leading to less powerful jumps.


```{r Average Eccentric Braking Impulse (Ns) per Player}
quarter_length <- length(unique(additional_metrics$PlayerId)) / 4
additional_metrics$facet_group <- cut(as.numeric(as.factor(additional_metrics$PlayerId)),
                                      breaks = c(0, quarter_length, 2*quarter_length, 3*quarter_length, Inf),
                                      labels = c('Group 1', 'Group 2', 'Group 3', 'Group 4'))
p7 <- ggplot(additional_metrics, aes(x = PlayerId, y = `Average Eccentric Braking Impulse (Ns)`)) +
  geom_bar(stat = 'identity', fill = 'pink') +
  labs(title = 'Average Eccentric Braking Impulse (Ns) per Player', y = 'Impulse (Ns)', x = 'Player ID') +
  scale_x_continuous(breaks = additional_metrics$PlayerId) +
  facet_wrap(~ facet_group, scales = 'free_x') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) 

print(p7)

```

#### Average Concentric Impulse Asymmetry (Ns) per Player:

Impulse asymmetry during the concentric phase indicates a difference in force production between the left and right legs during the upward phase of the jump.


Some players show significant asymmetry, which could be due to imbalances in muscle strength, previous injuries, or movement habits.

 
Asymmetry might increase the risk of injury, as one side of the body compensates for the other. It's crucial to address any pronounced asymmetry with targeted training or therapy.


```{r Average Concentric Impulse Asymmetry Ns per Player}
quarter_length <- length(unique(additional_metrics$PlayerId)) / 4
additional_metrics$facet_group <- cut(as.numeric(as.factor(additional_metrics$PlayerId)),
                                      breaks = c(0, quarter_length, 2*quarter_length, 3*quarter_length, Inf),
                                      labels = c('Group 1', 'Group 2', 'Group 3', 'Group 4'))

p5 <- ggplot(additional_metrics, aes(x = PlayerId, y = `Average Concentric Impulse Asymmetry (Ns)`)) +
  geom_bar(stat = 'identity', fill = 'cyan') +
  labs(title = 'Average Concentric Impulse Asymmetry (Ns) per Player', y = 'Asymmetry (Ns)', x = 'Player ID') +
  scale_x_continuous(breaks = additional_metrics$PlayerId) +
  facet_wrap(~ facet_group, scales = 'free_x') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) 

print(p5)
```

##### Average Eccentric Braking Asymmetry (%) per Player:

This metric measures the percentage difference in braking force between the left and right legs during the jump's downward phase.


Similar to the concentric impulse asymmetry, players exhibit varying levels of eccentric braking asymmetry. Players with high asymmetry might be relying more on one leg during the deceleration phase.


Addressing this asymmetry is vital for injury prevention and ensuring efficient movement patterns during jumps.


```{r Average Eccentric Braking Asymmetry  per Player}
quarter_length <- length(unique(additional_metrics$PlayerId)) / 4
additional_metrics$facet_group <- cut(as.numeric(as.factor(additional_metrics$PlayerId)),
                                      breaks = c(0, quarter_length, 2*quarter_length, 3*quarter_length, Inf),
                                      labels = c('Group 1', 'Group 2', 'Group 3', 'Group 4'))

p4 <- ggplot(additional_metrics, aes(x = PlayerId, y = `Average Eccentric Braking Asymmetry (%)`)) +
  geom_bar(stat = 'identity', fill = 'purple') +
  labs(title = 'Average Eccentric Braking Asymmetry (%) per Player', y = 'Asymmetry (%)', x = 'Player ID') +
  scale_x_continuous(breaks = additional_metrics$PlayerId) +
  facet_wrap(~ facet_group, scales = 'free_x') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))  # Rotate x-axis labels for better readability

print(p4)

```


